@model V5.Portal.Backstage.Models.System.EmployeeModel
@Html.ValidationSummary(true)
<div class="editor-label">
    所在部门：
</div>
<div class="editor-field">
    @(Html.Kendo().DropDownListFor(model => model.DepartmentID).OptionLabel(" 请 选 择 ").DataSource(ds => ds.Read("QueryDepartmentSelectListItems", "System")).DataTextField("Name").DataValueField("ID"))
</div>
<div class="editor-label">
    身份证：
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.IdentityCard)
    @Html.ValidationMessageFor(model => model.IdentityCard)
</div>
<div class="editor-label">
    户口所在地：
</div>
<div class="editor-field">
    @(Html.Kendo().DropDownListFor(model => model.ProvinceID).Name("ProvinceID").OptionLabel(" 请 选 择 ").DataSource(ds => ds.Read("QueryProvinces", "Home")).DataTextField("Name").DataValueField("ID"))
    @(Html.Kendo().DropDownListFor(model => model.CityID).Name("CityID").OptionLabel(" 请 选 择 ").DataSource(ds => ds.Read(action => action.Action("QueryCities", "Home").Data("filterCity")).ServerFiltering(true)).DataTextField("Name").DataValueField("ID").Enable(false).AutoBind(false).CascadeFrom("ProvinceID"))
    @(Html.Kendo().DropDownListFor(model => model.CountyID).OptionLabel(" 请 选 择 ").DataSource(ds => ds.Read(action => action.Action("QueryCounties", "Home").Data("filterCounty")).ServerFiltering(true)).DataTextField("Name").DataValueField("ID").Enable(false).AutoBind(false).CascadeFrom("CityID"))
</div>
<div class="editor-label">
    户口地址：
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.IdentityCardAddress)
    @Html.ValidationMessageFor(model => model.IdentityCardAddress)
</div>
<div class="editor-label">
    工资卡：
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.BankCard)
    @Html.ValidationMessageFor(model => model.BankCard)
</div>
<div class="editor-label">
    姓名：
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.Name)
    @Html.ValidationMessageFor(model => model.Name)
</div>
<div class="editor-label">
    年龄：
</div>
<div class="editor-field">
    @(Html.Kendo().IntegerTextBoxFor(model => model.Age).Value(Model.Age))
</div>
<div class="editor-label">
    性别：
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.Gender)
    @Html.ValidationMessageFor(model => model.Gender)
</div>
<div class="editor-label">
    手机号码：
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.Mobile)
    @Html.ValidationMessageFor(model => model.Mobile)
</div>
<div class="editor-label">
    家庭住址：
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.HomeAddress)
    @Html.ValidationMessageFor(model => model.HomeAddress)
</div>
<div class="editor-label">
    状态：
</div>
<div class="editor-field">
    @Html.Kendo().DropDownListFor(model => model.Status).OptionLabel(" 请 选 择 ").DataSource(ds => ds.Read("QueryEmployeeStatus", "System")).DataTextField("Text").DataValueField("Value")
</div>
